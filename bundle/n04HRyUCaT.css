/**
 * okaidia theme for JavaScript, CSS and HTML
 * Loosely based on Monokai textmate theme by http://www.monokai.nl/
 * @author ocodia
 */

code[class*="language-"],
pre[class*="language-"] {
	color: #f8f8f2;
	background: none;
	text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
	font-size: 1em;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	margin: .5em 0;
	overflow: auto;
	border-radius: 0.3em;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	background: #272822;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #8292a2;
}

.token.punctuation {
	color: #f8f8f2;
}

.token.namespace {
	opacity: .7;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
	color: #f92672;
}

.token.boolean,
.token.number {
	color: #ae81ff;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #a6e22e;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
	color: #f8f8f2;
}

.token.atrule,
.token.attr-value,
.token.function,
.token.class-name {
	color: #e6db74;
}

.token.keyword {
	color: #66d9ef;
}

.token.regex,
.token.important {
	color: #fd971f;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}
/*
 * New diff- syntax
 */

pre[class*="language-diff-"] {
	--eleventy-code-padding: 1.25em;
	padding-left: var(--eleventy-code-padding);
	padding-right: var(--eleventy-code-padding);
}
.token.deleted {
	background-color: hsl(0, 51%, 37%);
	color: inherit;
}
.token.inserted {
	background-color: hsl(126, 31%, 39%);
	color: inherit;
}

/* Make the + and - characters unselectable for copy/paste */
.token.prefix.unchanged,
.token.prefix.inserted,
.token.prefix.deleted {
	-webkit-user-select: none;
	user-select: none;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding-top: 2px;
	padding-bottom: 2px;
}
.token.prefix.inserted,
.token.prefix.deleted {
	width: var(--eleventy-code-padding);
	background-color: rgba(0,0,0,.2);
}

/* Optional: full-width background color */
.token.inserted:not(.prefix),
.token.deleted:not(.prefix) {
	display: block;
	margin-left: calc(-1 * var(--eleventy-code-padding));
	margin-right: calc(-1 * var(--eleventy-code-padding));
	text-decoration: none; /* override del, ins, mark defaults */
	color: inherit; /* override del, ins, mark defaults */
}
/* This is an arbitrary CSS string added to the bundle */
/* readable.css 1.1.1-rc1, licensed 0BSD */

/* Font family support */
html, html[data-font-family="serif"] {
	--font-family: serif;
}
html[data-font-family="sans-serif"] {
	--font-family: sans-serif;
}
html[data-font-family="monospace"] {
	--font-family: monospace;
}

/* Color scheme support */
html, html[data-theme="light"] {
	--background-color: snow;
	--color: #000;
}
html[data-high-contrast="on"], html[data-theme="light"][data-high-contrast="on"] {
	--background-color: #fff;
}

html[data-theme="dark"] {
	--background-color: #1f272d;
	--color: #fff;
}
html[data-theme="dark"][data-high-contrast="on"] {
	--background-color: #000;
}

@media (prefers-color-scheme: dark) {
	html {
		--background-color: #222830;
		--color: #fff;
	}
	html[data-high-contrast="on"] {
		--background-color: #000;
	}
}

@media (prefers-contrast: more) {
	:is(html:not([data-theme]), html[data-theme="light"]):not([data-high-contrast="off"]) {
		--background-color: #fff;
	}

	html[data-theme="dark"]:not([data-high-contrast="off"]) {
		--background-color: #000;
	}
}

/* Generic styles */
:root {
	--column-width: 67ch;
	--form-width: 50ch;
	--line-width: 0.125rem;
	--line-height: 1.5;

	--one-line: calc(var(--line-height) * 1rem);
	--half-line: calc(var(--one-line) * 0.5);

	font-family: var(--font-family);

	background-color: var(--background-color);
	color: var(--color);
}

a {
	color: inherit;
}

a:active {
	color: red;
}

header, footer, h1, h2 {
	text-align: center;
}

footer:not(.exclude) {
	border-top: var(--line-width) solid;
	contain: layout;
	margin-bottom: 0;
}

summary {
	cursor: pointer;
}

blockquote:not(.exclude) {
	padding-inline-start: var(--one-line);
	border-inline-start: var(--line-width) solid;
}

ul, ol {
	padding-inline-start: calc(var(--line-height) * 2rem);
}

:is(body, article, main, figure) > :is(img, video):not(.exclude) {
	max-width: 100%;
}

figure:not(.exclude) {
	text-align: center;
}

figure:not(.exclude) > * + figcaption {
	margin-top: 0;
	font-style: italic;
}

article aside:not(.exclude) {
	border: var(--line-width) solid;
	padding: 0 var(--one-line);
	border-radius: var(--half-line);
}

pre {
	max-width: 100%;
	overflow: auto;
	line-height: var(--one-line);
}

hr {
	color: inherit;
	border: 0;
	border-top: var(--line-width) solid;
}

/* Vertical Rhythm */
p, ul, ol, figcaption, nav, td, th, label {
	line-height: var(--line-height);
}

h1, h2, h3, h4, h5, h6, p, blockquote, hr, pre, footer, nav, figure, figcaption, :is(ul, ol):not(li > *), :is(body, article, main) > :is(img, video, details):not(.exclude), table, article > aside, article > aside {
	margin: var(--one-line) 0;
}

/* Headings */

header {
	margin: 0;
}

header :first-child {
	margin-top: calc(0.5 * var(--one-line));
}

header > h1 {
	font-weight: normal;
	margin-bottom: 0;
}

header > h1 + * {
	margin-top: 0;
}

header > :last-child {
	margin-bottom: calc(0.5 * var(--one-line));
}

header > h2:last-child {
	line-height: var(--one-line);
	font-size: 1rem;
	font-weight: normal;
}

header + * {
	margin-top: calc(0.5 * var(--one-line));
}

h1, h2 {
	line-height: calc(var(--line-height) * 2rem);
}

h1 {
	font-size: 2.5rem;
}

h2 {
	font-size: 1.75rem;
}

h3, h4, h5, h6 {
	line-height: var(--one-line);
	padding-top: calc(var(--line-height) * 0.75rem);
	margin-bottom: calc(var(--line-height) * 0.25rem);
}

:is(h3, h4, h5, h6) + * {
	margin-top: 0;
}

/* Navbar */
nav:not(.exclude:not([data-style]), [data-style="none"]) { /* This styling only affects the first nav element that is the direct child of the body */
	text-align: center;
	border-width: var(--line-width) 0;
	border-style: solid;
	line-height: var(--line-height);
	display: flex;
	flex-flow: row wrap;
	contain: layout;
}

nav:not(.exclude:not([data-style]), [data-style="none"]) > * {
	flex-grow: 1;
	margin: calc((var(--line-height) * 0.5rem) - var(--line-width)) var(--half-line); /* Put half a line's height on both top and bottom, then remove the width of the border */
	text-transform: uppercase;
}

nav[data-style="blockout"],
nav:is([data-style="boxes"], [data-style="roundesque"]) a:is(:hover, :focus) {
	background-color: var(--color);
	color: var(--background-color);
}

nav[data-style="blockout"] a {
	text-decoration: none;
}

nav[data-style="blockout"] a:is(:hover, :focus) {
	background-color: var(--background-color);
	color: var(--color);
}

nav[data-style]:is([data-style="boxes"], [data-style="roundesque"]) {
	border: 0;
}

nav:is([data-style="boxes"], [data-style="roundesque"]) a {
	text-decoration: none;
	border: var(--line-width) solid;
}

nav[data-style="roundesque"] a {
	border-radius: calc(0.25 * var(--one-line));
}

@media (prefers-reduced-motion: no-preference) {
	nav[data-style="classy"] span > a {
		text-decoration: none;
		display: inline-block;
	}

	nav[data-style="classy"] span > a::after {
		content: '';
		width: 0;
		height: var(--line-width);
		display: block;
		background: var(--color);
		transition: 150ms;
	}

	nav[data-style="classy"] span > a:is(:hover, :focus)::after {
		width: 100%;
	}
}

/* Column */
body {
	margin: 0 auto;
	width: min(95%, var(--column-width));
}

/* Justification (default off; use data-justify="on" on <html> to enable) */
/* 67ch (var(--column-width) / 95% (column max-width) === 70.526315789ch */
@media (min-width: 70.5ch) {
	[data-justify="on"] body {
		text-align: justify;
		text-justify: inter-character;
	}
}

/* Tables */
table:not(.exclude) {
	width: 100%;
	overflow: auto;
	border-collapse: collapse;
	margin: calc(-0.5 * var(--line-width)) 0;
}

table:not(.exclude) :is(td, th) {
	padding: 0 calc(var(--one-line) * 0.25);
	line-height: calc(var(--one-line) - 0.5*var(--line-width));
	border: var(--line-width) solid;
}

table:not(.exclude) td {
	word-wrap: break-word;
}

/* Forms */
form {
	max-width: var(--form-width)
}

form:not(.exclude) :is(label:not(input:is([type="checkbox"], [type="radio"]) + label), input:not([type="checkbox"], [type="radio"]), textarea, select) {
	display: block;
	margin: var(--half-line) 0;
}

form:not(.exclude) :is(input:not([type="checkbox"], [type="radio"]), textarea, select), button {
	box-sizing: border-box;
	padding: var(--half-line);
	background: transparent;
	border: var(--line-width) solid;
	color: inherit;
	font: inherit;
	width: 100%;
}

button {
	width: initial;
}

form:not(.exclude) label:not(input:is([type="checkbox"], [type="radio"]) + label) {
	font-weight: bold;
}